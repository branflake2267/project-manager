/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2013-04-29 14:08:19 UTC)
 * on 2013-04-30 at 06:08:58 UTC 
 * Modify at your own risk.
 */

package com.google.api.services.tagendpoint;

/**
 * Service definition for Tagendpoint (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link TagendpointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Tagendpoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 14,
        "You are currently running with version %s of google-api-client. " +
        "You need version 1.14 of google-api-client to run version " +
        "1.14.2-beta of the  library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://project-directory.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "tagendpoint/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Tagendpoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Tagendpoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the TagEndpoint collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Tagendpoint tagendpoint = new Tagendpoint(...);}
   *   {@code Tagendpoint.TagEndpoint.List request = tagendpoint.tagEndpoint().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public TagEndpoint tagEndpoint() {
    return new TagEndpoint();
  }

  /**
   * The "tagEndpoint" collection of methods.
   */
  public class TagEndpoint {

    /**
     * Create a request for the method "tagEndpoint.getTag".
     *
     * This request holds the parameters needed by the the tagendpoint server.  After setting any
     * optional parameters, call the {@link GetTag#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public GetTag getTag(java.lang.Long id) throws java.io.IOException {
      GetTag result = new GetTag(id);
      initialize(result);
      return result;
    }

    public class GetTag extends TagendpointRequest<com.google.api.services.tagendpoint.model.Tag> {

      private static final String REST_PATH = "tag/{id}";

      /**
       * Create a request for the method "tagEndpoint.getTag".
       *
       * This request holds the parameters needed by the the tagendpoint server.  After setting any
       * optional parameters, call the {@link GetTag#execute()} method to invoke the remote operation.
       * <p> {@link
       * GetTag#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected GetTag(java.lang.Long id) {
        super(Tagendpoint.this, "GET", REST_PATH, null, com.google.api.services.tagendpoint.model.Tag.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetTag setAlt(java.lang.String alt) {
        return (GetTag) super.setAlt(alt);
      }

      @Override
      public GetTag setFields(java.lang.String fields) {
        return (GetTag) super.setFields(fields);
      }

      @Override
      public GetTag setKey(java.lang.String key) {
        return (GetTag) super.setKey(key);
      }

      @Override
      public GetTag setOauthToken(java.lang.String oauthToken) {
        return (GetTag) super.setOauthToken(oauthToken);
      }

      @Override
      public GetTag setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetTag) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetTag setQuotaUser(java.lang.String quotaUser) {
        return (GetTag) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetTag setUserIp(java.lang.String userIp) {
        return (GetTag) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public GetTag setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @Override
      public GetTag set(String parameterName, Object value) {
        return (GetTag) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "tagEndpoint.insertTag".
     *
     * This request holds the parameters needed by the the tagendpoint server.  After setting any
     * optional parameters, call the {@link InsertTag#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.tagendpoint.model.Tag}
     * @return the request
     */
    public InsertTag insertTag(com.google.api.services.tagendpoint.model.Tag content) throws java.io.IOException {
      InsertTag result = new InsertTag(content);
      initialize(result);
      return result;
    }

    public class InsertTag extends TagendpointRequest<com.google.api.services.tagendpoint.model.Tag> {

      private static final String REST_PATH = "tag";

      /**
       * Create a request for the method "tagEndpoint.insertTag".
       *
       * This request holds the parameters needed by the the tagendpoint server.  After setting any
       * optional parameters, call the {@link InsertTag#execute()} method to invoke the remote
       * operation. <p> {@link
       * InsertTag#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.tagendpoint.model.Tag}
       * @since 1.13
       */
      protected InsertTag(com.google.api.services.tagendpoint.model.Tag content) {
        super(Tagendpoint.this, "POST", REST_PATH, content, com.google.api.services.tagendpoint.model.Tag.class);
      }

      @Override
      public InsertTag setAlt(java.lang.String alt) {
        return (InsertTag) super.setAlt(alt);
      }

      @Override
      public InsertTag setFields(java.lang.String fields) {
        return (InsertTag) super.setFields(fields);
      }

      @Override
      public InsertTag setKey(java.lang.String key) {
        return (InsertTag) super.setKey(key);
      }

      @Override
      public InsertTag setOauthToken(java.lang.String oauthToken) {
        return (InsertTag) super.setOauthToken(oauthToken);
      }

      @Override
      public InsertTag setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (InsertTag) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public InsertTag setQuotaUser(java.lang.String quotaUser) {
        return (InsertTag) super.setQuotaUser(quotaUser);
      }

      @Override
      public InsertTag setUserIp(java.lang.String userIp) {
        return (InsertTag) super.setUserIp(userIp);
      }

      @Override
      public InsertTag set(String parameterName, Object value) {
        return (InsertTag) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "tagEndpoint.listTag".
     *
     * This request holds the parameters needed by the the tagendpoint server.  After setting any
     * optional parameters, call the {@link ListTag#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public ListTag listTag() throws java.io.IOException {
      ListTag result = new ListTag();
      initialize(result);
      return result;
    }

    public class ListTag extends TagendpointRequest<com.google.api.services.tagendpoint.model.CollectionResponseExtentsionTag> {

      private static final String REST_PATH = "tag";

      /**
       * Create a request for the method "tagEndpoint.listTag".
       *
       * This request holds the parameters needed by the the tagendpoint server.  After setting any
       * optional parameters, call the {@link ListTag#execute()} method to invoke the remote operation.
       * <p> {@link
       * ListTag#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected ListTag() {
        super(Tagendpoint.this, "GET", REST_PATH, null, com.google.api.services.tagendpoint.model.CollectionResponseExtentsionTag.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public ListTag setAlt(java.lang.String alt) {
        return (ListTag) super.setAlt(alt);
      }

      @Override
      public ListTag setFields(java.lang.String fields) {
        return (ListTag) super.setFields(fields);
      }

      @Override
      public ListTag setKey(java.lang.String key) {
        return (ListTag) super.setKey(key);
      }

      @Override
      public ListTag setOauthToken(java.lang.String oauthToken) {
        return (ListTag) super.setOauthToken(oauthToken);
      }

      @Override
      public ListTag setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ListTag) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ListTag setQuotaUser(java.lang.String quotaUser) {
        return (ListTag) super.setQuotaUser(quotaUser);
      }

      @Override
      public ListTag setUserIp(java.lang.String userIp) {
        return (ListTag) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String cursor;

      /**

       */
      public java.lang.String getCursor() {
        return cursor;
      }

      public ListTag setCursor(java.lang.String cursor) {
        this.cursor = cursor;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Integer limit;

      /**

       */
      public java.lang.Integer getLimit() {
        return limit;
      }

      public ListTag setLimit(java.lang.Integer limit) {
        this.limit = limit;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Integer offset;

      /**

       */
      public java.lang.Integer getOffset() {
        return offset;
      }

      public ListTag setOffset(java.lang.Integer offset) {
        this.offset = offset;
        return this;
      }

      @Override
      public ListTag set(String parameterName, Object value) {
        return (ListTag) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "tagEndpoint.removeTag".
     *
     * This request holds the parameters needed by the the tagendpoint server.  After setting any
     * optional parameters, call the {@link RemoveTag#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public RemoveTag removeTag(java.lang.Long id) throws java.io.IOException {
      RemoveTag result = new RemoveTag(id);
      initialize(result);
      return result;
    }

    public class RemoveTag extends TagendpointRequest<com.google.api.services.tagendpoint.model.Tag> {

      private static final String REST_PATH = "tag/{id}";

      /**
       * Create a request for the method "tagEndpoint.removeTag".
       *
       * This request holds the parameters needed by the the tagendpoint server.  After setting any
       * optional parameters, call the {@link RemoveTag#execute()} method to invoke the remote
       * operation. <p> {@link
       * RemoveTag#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected RemoveTag(java.lang.Long id) {
        super(Tagendpoint.this, "DELETE", REST_PATH, null, com.google.api.services.tagendpoint.model.Tag.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public RemoveTag setAlt(java.lang.String alt) {
        return (RemoveTag) super.setAlt(alt);
      }

      @Override
      public RemoveTag setFields(java.lang.String fields) {
        return (RemoveTag) super.setFields(fields);
      }

      @Override
      public RemoveTag setKey(java.lang.String key) {
        return (RemoveTag) super.setKey(key);
      }

      @Override
      public RemoveTag setOauthToken(java.lang.String oauthToken) {
        return (RemoveTag) super.setOauthToken(oauthToken);
      }

      @Override
      public RemoveTag setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (RemoveTag) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public RemoveTag setQuotaUser(java.lang.String quotaUser) {
        return (RemoveTag) super.setQuotaUser(quotaUser);
      }

      @Override
      public RemoveTag setUserIp(java.lang.String userIp) {
        return (RemoveTag) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public RemoveTag setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @Override
      public RemoveTag set(String parameterName, Object value) {
        return (RemoveTag) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "tagEndpoint.updateTag".
     *
     * This request holds the parameters needed by the the tagendpoint server.  After setting any
     * optional parameters, call the {@link UpdateTag#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.tagendpoint.model.Tag}
     * @return the request
     */
    public UpdateTag updateTag(com.google.api.services.tagendpoint.model.Tag content) throws java.io.IOException {
      UpdateTag result = new UpdateTag(content);
      initialize(result);
      return result;
    }

    public class UpdateTag extends TagendpointRequest<com.google.api.services.tagendpoint.model.Tag> {

      private static final String REST_PATH = "tag";

      /**
       * Create a request for the method "tagEndpoint.updateTag".
       *
       * This request holds the parameters needed by the the tagendpoint server.  After setting any
       * optional parameters, call the {@link UpdateTag#execute()} method to invoke the remote
       * operation. <p> {@link
       * UpdateTag#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.tagendpoint.model.Tag}
       * @since 1.13
       */
      protected UpdateTag(com.google.api.services.tagendpoint.model.Tag content) {
        super(Tagendpoint.this, "PUT", REST_PATH, content, com.google.api.services.tagendpoint.model.Tag.class);
      }

      @Override
      public UpdateTag setAlt(java.lang.String alt) {
        return (UpdateTag) super.setAlt(alt);
      }

      @Override
      public UpdateTag setFields(java.lang.String fields) {
        return (UpdateTag) super.setFields(fields);
      }

      @Override
      public UpdateTag setKey(java.lang.String key) {
        return (UpdateTag) super.setKey(key);
      }

      @Override
      public UpdateTag setOauthToken(java.lang.String oauthToken) {
        return (UpdateTag) super.setOauthToken(oauthToken);
      }

      @Override
      public UpdateTag setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (UpdateTag) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public UpdateTag setQuotaUser(java.lang.String quotaUser) {
        return (UpdateTag) super.setQuotaUser(quotaUser);
      }

      @Override
      public UpdateTag setUserIp(java.lang.String userIp) {
        return (UpdateTag) super.setUserIp(userIp);
      }

      @Override
      public UpdateTag set(String parameterName, Object value) {
        return (UpdateTag) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link Tagendpoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Tagendpoint}. */
    @Override
    public Tagendpoint build() {
      return new Tagendpoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link TagendpointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setTagendpointRequestInitializer(
        TagendpointRequestInitializer tagendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(tagendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
