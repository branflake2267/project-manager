/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2013-04-29 14:08:19 UTC)
 * on 2013-04-30 at 06:09:24 UTC 
 * Modify at your own risk.
 */

package com.google.api.services.archetypeendpoint;

/**
 * Service definition for Archetypeendpoint (v1).
 *
 * <p>
 * This entity represents a Archetype.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ArchetypeendpointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Archetypeendpoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 14,
        "You are currently running with version %s of google-api-client. " +
        "You need version 1.14 of google-api-client to run version " +
        "1.14.2-beta of the  library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://project-directory.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "archetypeendpoint/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Archetypeendpoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Archetypeendpoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Archetype collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Archetypeendpoint archetypeendpoint = new Archetypeendpoint(...);}
   *   {@code Archetypeendpoint.Archetype.List request = archetypeendpoint.archetype().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Archetype archetype() {
    return new Archetype();
  }

  /**
   * The "archetype" collection of methods.
   */
  public class Archetype {

    /**
     * Create a request for the method "archetype.search".
     *
     * This request holds the parameters needed by the the archetypeendpoint server.  After setting any
     * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
     *
     * @param queryString
     * @return the request
     */
    public Search search(java.lang.String queryString) throws java.io.IOException {
      Search result = new Search(queryString);
      initialize(result);
      return result;
    }

    public class Search extends ArchetypeendpointRequest<com.google.api.services.archetypeendpoint.model.CollectionResponseExtentsionArchetype> {

      private static final String REST_PATH = "archetype/search/{queryString}";

      /**
       * Create a request for the method "archetype.search".
       *
       * This request holds the parameters needed by the the archetypeendpoint server.  After setting
       * any optional parameters, call the {@link Search#execute()} method to invoke the remote
       * operation. <p> {@link
       * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param queryString
       * @since 1.13
       */
      protected Search(java.lang.String queryString) {
        super(Archetypeendpoint.this, "GET", REST_PATH, null, com.google.api.services.archetypeendpoint.model.CollectionResponseExtentsionArchetype.class);
        this.queryString = com.google.api.client.util.Preconditions.checkNotNull(queryString, "Required parameter queryString must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Search setAlt(java.lang.String alt) {
        return (Search) super.setAlt(alt);
      }

      @Override
      public Search setFields(java.lang.String fields) {
        return (Search) super.setFields(fields);
      }

      @Override
      public Search setKey(java.lang.String key) {
        return (Search) super.setKey(key);
      }

      @Override
      public Search setOauthToken(java.lang.String oauthToken) {
        return (Search) super.setOauthToken(oauthToken);
      }

      @Override
      public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Search) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Search setQuotaUser(java.lang.String quotaUser) {
        return (Search) super.setQuotaUser(quotaUser);
      }

      @Override
      public Search setUserIp(java.lang.String userIp) {
        return (Search) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String queryString;

      /**

       */
      public java.lang.String getQueryString() {
        return queryString;
      }

      public Search setQueryString(java.lang.String queryString) {
        this.queryString = queryString;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Integer limit;

      /**

       */
      public java.lang.Integer getLimit() {
        return limit;
      }

      public Search setLimit(java.lang.Integer limit) {
        this.limit = limit;
        return this;
      }

      @Override
      public Search set(String parameterName, Object value) {
        return (Search) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the ArchetypeEndpoint collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Archetypeendpoint archetypeendpoint = new Archetypeendpoint(...);}
   *   {@code Archetypeendpoint.ArchetypeEndpoint.List request = archetypeendpoint.archetypeEndpoint().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public ArchetypeEndpoint archetypeEndpoint() {
    return new ArchetypeEndpoint();
  }

  /**
   * The "archetypeEndpoint" collection of methods.
   */
  public class ArchetypeEndpoint {

    /**
     * Create a request for the method "archetypeEndpoint.getArchetype".
     *
     * This request holds the parameters needed by the the archetypeendpoint server.  After setting any
     * optional parameters, call the {@link GetArchetype#execute()} method to invoke the remote
     * operation.
     *
     * @param key
     * @return the request
     */
    public GetArchetype getArchetype(java.lang.String key) throws java.io.IOException {
      GetArchetype result = new GetArchetype(key);
      initialize(result);
      return result;
    }

    public class GetArchetype extends ArchetypeendpointRequest<com.google.api.services.archetypeendpoint.model.Archetype> {

      private static final String REST_PATH = "archetype/{key}";

      /**
       * Create a request for the method "archetypeEndpoint.getArchetype".
       *
       * This request holds the parameters needed by the the archetypeendpoint server.  After setting
       * any optional parameters, call the {@link GetArchetype#execute()} method to invoke the remote
       * operation. <p> {@link
       * GetArchetype#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param key
       * @since 1.13
       */
      protected GetArchetype(java.lang.String key) {
        super(Archetypeendpoint.this, "GET", REST_PATH, null, com.google.api.services.archetypeendpoint.model.Archetype.class);
        this.key = com.google.api.client.util.Preconditions.checkNotNull(key, "Required parameter key must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetArchetype setAlt(java.lang.String alt) {
        return (GetArchetype) super.setAlt(alt);
      }

      @Override
      public GetArchetype setFields(java.lang.String fields) {
        return (GetArchetype) super.setFields(fields);
      }

      @Override
      public GetArchetype setKey(java.lang.String key) {
        return (GetArchetype) super.setKey(key);
      }

      @Override
      public GetArchetype setOauthToken(java.lang.String oauthToken) {
        return (GetArchetype) super.setOauthToken(oauthToken);
      }

      @Override
      public GetArchetype setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetArchetype) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetArchetype setQuotaUser(java.lang.String quotaUser) {
        return (GetArchetype) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetArchetype setUserIp(java.lang.String userIp) {
        return (GetArchetype) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String key;

      /**

       */
      public java.lang.String getKey() {
        return key;
      }

      public GetArchetype setKey(java.lang.String key) {
        this.key = key;
        return this;
      }

      @Override
      public GetArchetype set(String parameterName, Object value) {
        return (GetArchetype) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "archetypeEndpoint.insertArchetype".
     *
     * This request holds the parameters needed by the the archetypeendpoint server.  After setting any
     * optional parameters, call the {@link InsertArchetype#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.google.api.services.archetypeendpoint.model.Archetype}
     * @return the request
     */
    public InsertArchetype insertArchetype(com.google.api.services.archetypeendpoint.model.Archetype content) throws java.io.IOException {
      InsertArchetype result = new InsertArchetype(content);
      initialize(result);
      return result;
    }

    public class InsertArchetype extends ArchetypeendpointRequest<com.google.api.services.archetypeendpoint.model.Archetype> {

      private static final String REST_PATH = "archetype";

      /**
       * Create a request for the method "archetypeEndpoint.insertArchetype".
       *
       * This request holds the parameters needed by the the archetypeendpoint server.  After setting
       * any optional parameters, call the {@link InsertArchetype#execute()} method to invoke the remote
       * operation. <p> {@link InsertArchetype#initialize(com.google.api.client.googleapis.services.Abst
       * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param content the {@link com.google.api.services.archetypeendpoint.model.Archetype}
       * @since 1.13
       */
      protected InsertArchetype(com.google.api.services.archetypeendpoint.model.Archetype content) {
        super(Archetypeendpoint.this, "POST", REST_PATH, content, com.google.api.services.archetypeendpoint.model.Archetype.class);
      }

      @Override
      public InsertArchetype setAlt(java.lang.String alt) {
        return (InsertArchetype) super.setAlt(alt);
      }

      @Override
      public InsertArchetype setFields(java.lang.String fields) {
        return (InsertArchetype) super.setFields(fields);
      }

      @Override
      public InsertArchetype setKey(java.lang.String key) {
        return (InsertArchetype) super.setKey(key);
      }

      @Override
      public InsertArchetype setOauthToken(java.lang.String oauthToken) {
        return (InsertArchetype) super.setOauthToken(oauthToken);
      }

      @Override
      public InsertArchetype setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (InsertArchetype) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public InsertArchetype setQuotaUser(java.lang.String quotaUser) {
        return (InsertArchetype) super.setQuotaUser(quotaUser);
      }

      @Override
      public InsertArchetype setUserIp(java.lang.String userIp) {
        return (InsertArchetype) super.setUserIp(userIp);
      }

      @Override
      public InsertArchetype set(String parameterName, Object value) {
        return (InsertArchetype) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "archetypeEndpoint.listArchetype".
     *
     * This request holds the parameters needed by the the archetypeendpoint server.  After setting any
     * optional parameters, call the {@link ListArchetype#execute()} method to invoke the remote
     * operation.
     *
     * @return the request
     */
    public ListArchetype listArchetype() throws java.io.IOException {
      ListArchetype result = new ListArchetype();
      initialize(result);
      return result;
    }

    public class ListArchetype extends ArchetypeendpointRequest<com.google.api.services.archetypeendpoint.model.CollectionResponseExtentsionArchetype> {

      private static final String REST_PATH = "archetype";

      /**
       * Create a request for the method "archetypeEndpoint.listArchetype".
       *
       * This request holds the parameters needed by the the archetypeendpoint server.  After setting
       * any optional parameters, call the {@link ListArchetype#execute()} method to invoke the remote
       * operation. <p> {@link ListArchetype#initialize(com.google.api.client.googleapis.services.Abstra
       * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @since 1.13
       */
      protected ListArchetype() {
        super(Archetypeendpoint.this, "GET", REST_PATH, null, com.google.api.services.archetypeendpoint.model.CollectionResponseExtentsionArchetype.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public ListArchetype setAlt(java.lang.String alt) {
        return (ListArchetype) super.setAlt(alt);
      }

      @Override
      public ListArchetype setFields(java.lang.String fields) {
        return (ListArchetype) super.setFields(fields);
      }

      @Override
      public ListArchetype setKey(java.lang.String key) {
        return (ListArchetype) super.setKey(key);
      }

      @Override
      public ListArchetype setOauthToken(java.lang.String oauthToken) {
        return (ListArchetype) super.setOauthToken(oauthToken);
      }

      @Override
      public ListArchetype setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ListArchetype) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ListArchetype setQuotaUser(java.lang.String quotaUser) {
        return (ListArchetype) super.setQuotaUser(quotaUser);
      }

      @Override
      public ListArchetype setUserIp(java.lang.String userIp) {
        return (ListArchetype) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String cursor;

      /**

       */
      public java.lang.String getCursor() {
        return cursor;
      }

      public ListArchetype setCursor(java.lang.String cursor) {
        this.cursor = cursor;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Integer limit;

      /**

       */
      public java.lang.Integer getLimit() {
        return limit;
      }

      public ListArchetype setLimit(java.lang.Integer limit) {
        this.limit = limit;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Integer offset;

      /**

       */
      public java.lang.Integer getOffset() {
        return offset;
      }

      public ListArchetype setOffset(java.lang.Integer offset) {
        this.offset = offset;
        return this;
      }

      @Override
      public ListArchetype set(String parameterName, Object value) {
        return (ListArchetype) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "archetypeEndpoint.removeArchetype".
     *
     * This request holds the parameters needed by the the archetypeendpoint server.  After setting any
     * optional parameters, call the {@link RemoveArchetype#execute()} method to invoke the remote
     * operation.
     *
     * @param key
     * @return the request
     */
    public RemoveArchetype removeArchetype(java.lang.String key) throws java.io.IOException {
      RemoveArchetype result = new RemoveArchetype(key);
      initialize(result);
      return result;
    }

    public class RemoveArchetype extends ArchetypeendpointRequest<com.google.api.services.archetypeendpoint.model.Archetype> {

      private static final String REST_PATH = "archetype/{key}";

      /**
       * Create a request for the method "archetypeEndpoint.removeArchetype".
       *
       * This request holds the parameters needed by the the archetypeendpoint server.  After setting
       * any optional parameters, call the {@link RemoveArchetype#execute()} method to invoke the remote
       * operation. <p> {@link RemoveArchetype#initialize(com.google.api.client.googleapis.services.Abst
       * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param key
       * @since 1.13
       */
      protected RemoveArchetype(java.lang.String key) {
        super(Archetypeendpoint.this, "DELETE", REST_PATH, null, com.google.api.services.archetypeendpoint.model.Archetype.class);
        this.key = com.google.api.client.util.Preconditions.checkNotNull(key, "Required parameter key must be specified.");
      }

      @Override
      public RemoveArchetype setAlt(java.lang.String alt) {
        return (RemoveArchetype) super.setAlt(alt);
      }

      @Override
      public RemoveArchetype setFields(java.lang.String fields) {
        return (RemoveArchetype) super.setFields(fields);
      }

      @Override
      public RemoveArchetype setKey(java.lang.String key) {
        return (RemoveArchetype) super.setKey(key);
      }

      @Override
      public RemoveArchetype setOauthToken(java.lang.String oauthToken) {
        return (RemoveArchetype) super.setOauthToken(oauthToken);
      }

      @Override
      public RemoveArchetype setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (RemoveArchetype) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public RemoveArchetype setQuotaUser(java.lang.String quotaUser) {
        return (RemoveArchetype) super.setQuotaUser(quotaUser);
      }

      @Override
      public RemoveArchetype setUserIp(java.lang.String userIp) {
        return (RemoveArchetype) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String key;

      /**

       */
      public java.lang.String getKey() {
        return key;
      }

      public RemoveArchetype setKey(java.lang.String key) {
        this.key = key;
        return this;
      }

      @Override
      public RemoveArchetype set(String parameterName, Object value) {
        return (RemoveArchetype) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "archetypeEndpoint.updateArchetype".
     *
     * This request holds the parameters needed by the the archetypeendpoint server.  After setting any
     * optional parameters, call the {@link UpdateArchetype#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.google.api.services.archetypeendpoint.model.Archetype}
     * @return the request
     */
    public UpdateArchetype updateArchetype(com.google.api.services.archetypeendpoint.model.Archetype content) throws java.io.IOException {
      UpdateArchetype result = new UpdateArchetype(content);
      initialize(result);
      return result;
    }

    public class UpdateArchetype extends ArchetypeendpointRequest<com.google.api.services.archetypeendpoint.model.Archetype> {

      private static final String REST_PATH = "archetype";

      /**
       * Create a request for the method "archetypeEndpoint.updateArchetype".
       *
       * This request holds the parameters needed by the the archetypeendpoint server.  After setting
       * any optional parameters, call the {@link UpdateArchetype#execute()} method to invoke the remote
       * operation. <p> {@link UpdateArchetype#initialize(com.google.api.client.googleapis.services.Abst
       * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param content the {@link com.google.api.services.archetypeendpoint.model.Archetype}
       * @since 1.13
       */
      protected UpdateArchetype(com.google.api.services.archetypeendpoint.model.Archetype content) {
        super(Archetypeendpoint.this, "PUT", REST_PATH, content, com.google.api.services.archetypeendpoint.model.Archetype.class);
      }

      @Override
      public UpdateArchetype setAlt(java.lang.String alt) {
        return (UpdateArchetype) super.setAlt(alt);
      }

      @Override
      public UpdateArchetype setFields(java.lang.String fields) {
        return (UpdateArchetype) super.setFields(fields);
      }

      @Override
      public UpdateArchetype setKey(java.lang.String key) {
        return (UpdateArchetype) super.setKey(key);
      }

      @Override
      public UpdateArchetype setOauthToken(java.lang.String oauthToken) {
        return (UpdateArchetype) super.setOauthToken(oauthToken);
      }

      @Override
      public UpdateArchetype setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (UpdateArchetype) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public UpdateArchetype setQuotaUser(java.lang.String quotaUser) {
        return (UpdateArchetype) super.setQuotaUser(quotaUser);
      }

      @Override
      public UpdateArchetype setUserIp(java.lang.String userIp) {
        return (UpdateArchetype) super.setUserIp(userIp);
      }

      @Override
      public UpdateArchetype set(String parameterName, Object value) {
        return (UpdateArchetype) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link Archetypeendpoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Archetypeendpoint}. */
    @Override
    public Archetypeendpoint build() {
      return new Archetypeendpoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ArchetypeendpointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setArchetypeendpointRequestInitializer(
        ArchetypeendpointRequestInitializer archetypeendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(archetypeendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
